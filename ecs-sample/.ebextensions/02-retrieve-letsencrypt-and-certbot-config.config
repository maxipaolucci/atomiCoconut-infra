files:
  /home/ec2-user/retrieve-letsencrypt-and-certbot-config.sh:
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/sh
      aws s3 cp s3://atomicoconut/infrastructure/conf-certbot.zip conf-certbot.zip
      sudo rm -rf conf www
      unzip conf-certbot.zip
      rm conf-certbot.zip
  /home/ec2-user/setup-crontab.sh:
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/sh
      # get environment type from elasticbeanstalk env vars
      ENVIRONMENT_TYPE=`sudo /opt/elasticbeanstalk/bin/get-config environment | jq .ENVIRONMENT_TYPE | tr -d '"'`
      # write out current crontab
      crontab -l > mycron
      # echo new cron into cron file
      echo "0 0 * * 4 sh backup_certbot_certs.sh elasticbeanstalk-ap-southeast-2-782522910439 $ENVIRONMENT_TYPE" >> mycron
      echo "0 */6 * * * sh reload_nginx.sh $ENVIRONMENT_TYPE" >> mycron
      # install new cron file
      crontab mycron
      # removed the created file
      rm mycron

commands:
  01-retrieve-letsencrypt-and-certbot-config:
    # run commands as ec2-user instead of root (default)
    command: sudo -H -u ec2-user bash -c './retrieve-letsencrypt-and-certbot-config.sh'
    cwd: /home/ec2-user
  02-remove-retrieve-letsencrypt-and-certbot-config-script:
    command: sudo -H -u ec2-user bash -c 'rm retrieve-letsencrypt-and-certbot-config.sh'
    cwd: /home/ec2-user
  03-setup-crontab:
    command: sudo -H -u ec2-user bash -c './setup-crontab.sh'
    cwd: /home/ec2-user
    ignoreErrors: true
  04-remove-setup-crontab-script:
    command: sudo -H -u ec2-user bash -c 'rm setup-crontab.sh'
    cwd: /home/ec2-user
    ignoreErrors: true
  