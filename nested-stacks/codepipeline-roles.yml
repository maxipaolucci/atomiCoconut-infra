AWSTemplateFormatVersion: "2010-09-09"

Description: 'Required AWS CodePipeline roles to perform build and deployment tasks'

Parameters:  
  AppName:
    Description: Application name
    Type: String
    Default: atomiCoconut
  RepoBranch:
    Description: Repository branch name
    Type: String
    Default: testing
  CodePipelineS3Bucket:
    Description: S3 bucket to store CodePipeline Resources
    Type: String
    Default: codepipeline-ap-southeast-2-215851890597
    AllowedValues:
      - codepipeline-ap-southeast-2-215851890597

Resources:
  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-${RepoBranch}-codebuild-service-role'
      Description: !Sub 'CodeBuild service role for branch ${RepoBranch}' 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /service-role/
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicPowerUser'
      Policies:
        - PolicyName: !Join ['-', [ CodeBuildBasePolicy, !Ref AppName, !Ref RepoBranch, !Ref AWS::Region ] ]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs:ap-southeast-2:782522910439:log-group:/aws/codebuild/${AppName}-${RepoBranch}'
                  - !Sub 'arn:aws:logs:ap-southeast-2:782522910439:log-group:/aws/codebuild/${AppName}-${RepoBranch}:*'
              - Effect: Allow
                Resource:
                  - "arn:aws:s3:::codepipeline-ap-southeast-2-*"
                Action: 
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${CodePipelineS3Bucket}'
                  - !Sub 'arn:aws:s3:::${CodePipelineS3Bucket}/*'
                Action: 
                  - "s3:PutObject"
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"
              - Effect: Allow
                Action:
                  - "codebuild:CreateReportGroup"
                  - "codebuild:CreateReport"
                  - "codebuild:UpdateReport"
                  - "codebuild:BatchPutTestCases"
                  - "codebuild:BatchPutCodeCoverages"
                Resource:
                  - !Sub 'arn:aws:codebuild:ap-southeast-2:782522910439:report-group/${AppName}-${RepoBranch}-*'

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-${RepoBranch}-codepipeline-service-role'
      Description: !Sub 'CodePipeline service role for branch ${RepoBranch}' 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /service-role/
      MaxSessionDuration: 3600
      Policies:
        - PolicyName: !Join ['-', [ CodePipelineServiceRole, !Ref AWS::Region, !Ref AppName, !Ref RepoBranch ] ]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - "cloudformation.amazonaws.com"
                      - "elasticbeanstalk.amazonaws.com"
                      - "ec2.amazonaws.com"
                      - "ecs-tasks.amazonaws.com"
              - Effect: Allow
                Action:
                  - "codecommit:CancelUploadArchive"
                  - "codecommit:GetBranch"
                  - "codecommit:GetCommit"
                  - "codecommit:GetUploadArchiveStatus"
                  - "codecommit:UploadArchive"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplication"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "elasticbeanstalk:*"
                  - "ec2:*"
                  - "elasticloadbalancing:*"
                  - "autoscaling:*"
                  - "cloudwatch:*"
                  - "s3:*"
                  - "sns:*"
                  - "cloudformation:*"
                  - "rds:*"
                  - "sqs:*"
                  - "ecs:*"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                  - "lambda:ListFunctions"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "opsworks:CreateDeployment"
                  - "opsworks:DescribeApps"
                  - "opsworks:DescribeCommands"
                  - "opsworks:DescribeDeployments"
                  - "opsworks:DescribeInstances"
                  - "opsworks:DescribeStacks"
                  - "opsworks:UpdateApp"
                  - "opsworks:UpdateStack"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuildBatches"
                  - "codebuild:StartBuildBatch"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "devicefarm:ListProjects"
                  - "devicefarm:ListDevicePools"
                  - "devicefarm:GetRun"
                  - "devicefarm:GetUpload"
                  - "devicefarm:CreateUpload"
                  - "devicefarm:ScheduleRun"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "servicecatalog:ListProvisioningArtifacts"
                  - "servicecatalog:CreateProvisioningArtifact"
                  - "servicecatalog:DescribeProvisioningArtifact"
                  - "servicecatalog:DeleteProvisioningArtifact"
                  - "servicecatalog:UpdateProduct"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "cloudformation:ValidateTemplate"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "ecr:DescribeImages"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "states:DescribeExecution"
                  - "states:DescribeStateMachine"
                  - "states:StartExecution"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "appconfig:StartDeployment"
                  - "appconfig:StopDeployment"
                  - "appconfig:GetDeployment"
                Resource: '*'
Outputs:
  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildServiceRole.Arn
  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineServiceRole.Arn